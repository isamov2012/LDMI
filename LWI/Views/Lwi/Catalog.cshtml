@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model CatalogVM[]

<div class="catalog-wrapper">
	<div class="sidebar">
		<div class="row">
			<aside class="row-sm-4">
				<h3>Filters</h3>
				<div class="card">
					<article class="card-group-item">
						<header class="card-header">
							<h5 class="title">Choose category </h5>
						</header>
						<div class="filter-content">
							<div class="card-body">
								@{
									var distinctArray = Model.DistinctBy(x => x.Category).Select(x => x.Category).ToArray();
								}
								@for (var i = 0; i < distinctArray.Length; i++)
								{
									@*var newModel = new string[Model.Length];
								if (!newModel.Contains(Model[i].Category)) { newModel[i] = Model[i].Category; }*@
									<label class="form-check-label">
										<a href="@Url.Action("Catalog", "Lwi", new { category = distinctArray[i]})">@distinctArray[i] </a>
									</label>
								}
								<a href="@Url.Action("Catalog", "Lwi")">Clear All Filters</a>

								@*<label class="form-check">
								<input class="form-check-input" type="checkbox" name="exampleRadio" data-filter="Programming">
								<span class="form-check-label">
								Programming
								</span>
								</label>
								<label class="form-check">
								<input class="form-check-input" type="checkbox" name="exampleRadio" data-filter="Spinning-fidget">
								<span class="form-check-label">
								Web Development
								</span>
								</label>
								<label class="form-check">
								<input class="form-check-input" type="checkbox" name="exampleRadio" data-filter="Saving-Earth">
								<span class="form-check-label">
								Saving Earth
								</span>
								</label>*@
							</div> <!-- card-body.// -->
						</div>
					</article> <!-- card-group-item.// -->
				</div> <!-- card.// -->

				<div class="card">
					<article class="card-group-item">
						<header class="card-header">
							<h6 class="title">Instructor </h6>
						</header>
						<div class="filter-content">
							<div class="card-body">
								<form>
									<label class="form-check">
										<input class="form-check-input" name="teacherFilter" type="radio" id="isam">
										<span class="form-check-label">
											Isam
										</span>
									</label> <!-- form-check.// -->
									<label class="form-check">
										<input class="form-check-input" name="teacherFilter" type="radio"  id="nadine">
										<span class="form-check-label">
											Nadine
										</span>
									</label>  <!-- form-check.// -->
									<label class="form-check">
										<input class="form-check-input" name="teacherFilter" type="radio" id="pontus">
										<span class="form-check-label">
											Pontus
										</span>
									</label>  <!-- form-check.// -->
									<label class="form-check">
										<input class="form-check-input" name="teacherFilter" type="radio" id="all" checked>
										<span class="form-check-label">
											All instructors
										</span>
									</label>  <!-- form-check.// -->
								</form>

							</div> <!-- card-body.// -->
						</div>
				</div> <!-- card.// -->
				</article> <!-- card-group-item.// -->
			</aside> <!-- col.// -->
			<aside class="row-sm-4">
				<div class="card">
					<article class="card-group-item">
						<header class="card-header"><h6 class="title">Price</h6></header>
						<div class="filter-content">
							<div class="card-body">
								<label class="btn btn-danger">
									<input class="form-check-input" type="radio" name="priceFilter" id="FreeCourses" >
									<span class="form-check-label">Free</span>
								</label>
								<label class="btn btn-primary">
									<input class="form-check-input" type="radio" name="priceFilter" id="non-FreeCourses" >
									<span class="form-check-label">Money!</span>
								</label>
								<label class="btn btn-info">
									<input class="form-check-input" type="radio" name="priceFilter" id="AllIn"checked >
									<span class="form-check-label">All courses</span>
								</label>
							</div> <!-- card-body.// -->
						</div>
					</article> <!-- card-group-item.// -->
				</div> <!-- card.// -->
			</aside> <!-- col.// -->
		</div> <!-- row.// -->

	</div>
	<!--container end.//-->

	<div class="content">
		<div class="container">
			<div id="rowDiv" class="row">
				@foreach (var course in Model)
				{
					<div class="card course"
						 course-price="@course.Price"
						 course-teacher="@course.Teacher"
						 course-category="@course.Category"
						 style="flex-direction:row;width: 18rem; margin:10px">
						<a asp-controller="Lwi" asp-action="Details" asp-route-id="@course.Id" style="display:flex;flex-direction:column">
							<img src="~/images/@course.ImgName" class="card-img-top" alt="@course.ImgAlt">
							<div class="card-body">
								<h5 class="card-title">@course.Name</h5>
								<p class="card-text">@course.DescriptionShort</p>
							</div>
							<div class="card-footer text-muted" style="padding-bottom:0;margin-bottom:0">
								<p><strong>Price:</strong> @course.Price</p>
							</div>
						</a>
					</div>
				}
			</div>
		</div>
	</div>
</div>
<script type="text/javascript">

	const priceFilterRadios = document.getElementsByName("priceFilter");
	const teacherFilterRadios = document.getElementsByName("teacherFilter");
	const courses = document.getElementsByClassName("product");

	for (let i = 0; i < priceFilterRadios.length; i++) {
		priceFilterRadios[i].addEventListener("click", filterCourses);
	}

	for (let i = 0; i < teacherFilterRadios.length; i++) {
		teacherFilterRadios[i].addEventListener("click", filterCourses);
	}

	function filterCourses() {
		const selectedPriceFilter = document.querySelector('input[name="priceFilter"]:checked').value;
		const selectedTeacherFilter = document.querySelector('input[name="teacherFilter"]:checked').value;
		console.log(selectedPriceFilter)
		for (let i = 0; i <courses.length; i++) {
			const course =courses[i];
			const price = parseFloat(product.dataset.price);
			const teacher = course.dataset.teacher;

			const matchesPriceFilter = selectedPriceFilter === "all" ||
				(selectedPriceFilter === "low" && price < 50) ||
				(selectedPriceFilter === "medium" && price >= 50 && price < 100) ||
				(selectedPriceFilter === "high" && price >= 100);

			const matchesTeacherFilter = selectedTeacherFilter === "all" || selectedTeacherFilter === teacher;

			if (matchesPriceFilter && matchesTeacherFilter) {
				product.style.display = "block";
			} else {
				product.style.display = "none";
			}
		}
	}

	//var courses = document.querySelectorAll(".course")

	//function change(filter) {
	//	courses.forEach(function (course) {
	//		var price = parseFloat(course.getAttribute("course-price"))
	//		if (filter.id === "FreeCourses") {
	//			if (price > 0) course.style.display = "none"
	//			else course.style.display = ""
	//		}
	//		if (filter.id === "non-FreeCourses") {
	//			if (price == 0) course.style.display = "none"
	//			else course.style.display = ""
	//		}
	//		if (filter.id === "AllIn") course.style.display = ""
	//	})
	//}

	//function change1(filter) {
	//	courses.forEach(function (course) {
	//		var teacher = course.getAttribute("course-teacher")
	//		if (filter.id === "isam") {
	//			if (teacher !== "Isam") course.style.display = "none"
	//			else course.style.display = ""
	//		}
	//		if (filter.id === "nadine") {
	//			if (teacher !== "Nadine") course.style.display = "none"
	//			else course.style.display = ""
	//		}
	//		if (filter.id === "pontus") {
	//			if (teacher !== "Pontus") course.style.display = "none"
	//			else course.style.display = ""
	//		}
	//		if (filter.id === "all") {
	//			course.style.display = ""
	//		}
	//	})

	//}
</script>